// Node 操作文件系统 --- fs模块

const fs = require('fs')
// const { resolve } = require('path')

// 文件打开
// fs.open('test.txt', 'r+', (error, fd) => {
//     if (error) {
//         return console.error(error)
//     }
//     console.log('file is open')
// })

// 文件关闭
// fs.open('test.txt', 'r+', (error, fd) => {
//     if (error) {
//         return console.error(error)
//     }
//     console.log('file is open')

//     fs.close(fd, (error) => {
//         if (error) {
//             console.error(error)
//         }
//         console.log('file is closed')
//     })
// })

// 文件删除
// fs.unlink('hello.txt', (error) => {
//     if (error) {
//         throw error
//     }

//     console.log('success')
// })

// 文件重命名
// fs.rename('test.txt', 'world.txt', (error) => {
//     if (error) {
//         console.log(error)
//     }

//     // 查看文件基本信息
//     fs.stat('world.txt', (error, stats) => {
//         if (error) {
//             console.log(error)
//         }
    
//         console.log(JSON.stringify(stats))
//     })
// })

// 给文件追加内容
// fs.appendFile('info.txt', 'hello world', 'utf8', (error) => {
//     if (error) {
//         throw error
//     }

//     console.log('success')
// })

// 创建文件
// fs.mkdir('mydir/hello', (error) => {
//     if (error) {
//         throw error
//     }

//     console.log('success')
// })

// recursive递归
// fs.mkdir('mydir/hello',　{recursive: true}, (error) => {
//     if (error) {
//         throw error
//     }

//     console.log('success')
// })

// 读取目录文件列表
// fs.readdir('./', (error, files) => {
//     if (error) {
//         throw error
//     }

//     console.log(files)
// })

// 检测文件是否存在
// fs.access('./app0.js', (error) => {
//     if (error) {
//         throw error
//     }

//     console.log('success')
// })

// 获取绝对路径
// fs.realpath('app0.js', (error, resolvePath) => {
//     if (error) {
//         throw error
//     }

//     console.log(resolvePath)
// })

// 删除特定目录
// fs.rmdir('mydir', (error) => {
//     if (error) {
//         throw error
//     }

//     console.log('success')
// })

// recursive
// fs.rmdir('mydir', {recursive: true}, (error) => {
//     if (error) {
//         throw error
//     }

//     console.log('success')
// })

// stream input 
const readStream = fs.createReadStream('./app1.js', {encoding: 'utf8'})

// readStream.on('open', (fd) => {
//     console.log(fd)
// })

// readStream.on('ready', () => {
//     console.log('ready')
// })

// readStream.on('data', (chunk) => {
//     console.log(chunk)
// })

// readStream.on('end', () => {
//     console.log('end')
// })

// readStream.on('close', () => {
//     console.log('close')
// })

// readStream.on('error', (error) => {
//     console.log(error)
// })

// stream output
const writeStream = fs.createWriteStream('mytest', {encoding: 'utf8'})

readStream.on('data', (data) => {
    writeStream.write(data, () => {
        console.log(data);
    })
})



